SHORT TERM BACKLOG

DONE:	SerializationContainer -> Portable 
DONE:	Engine.Common -> Portable
DONE:	Xirkit -> from Engine to ..
DONE:	Xirkit -> Portable
DONE:	KeyframeAnimation -> Portable
DONE:	Remove Scenemanagement Code
DONE:   Invent a convention for how to handle 
				namespaces / class names
				file names
				folders
				project file names
				generated dll names
				handwritten js projects in terms of script names and source directories
				additional dll versions for different platforms (like shared implementation dlls - probably RenderContextImp for OpenTK/Desktop vs OpenTK/Android)
			that makes sense and holds for eternity.
DONE:	Create "Core" or "Common" on Fusee level (not below Engine) containing common base functionality (like Diagnostic.Log...)
DONE:	Engine.Core -> Portable
DONE:	SimpleScene -> Portable
DONE:	Fix Rebuild All
DONE:	Create standard .Net and standard .js host apps (containing main, perhaps providing libraries)
WORK:	Unify keyboard/mouse and gamepad input
		Add Touch input
		Restructure input (move keyboard/mouse out of Graphics)
		Clean-up gamepad input (implement new interfaces, 
		Transform Examples to portable DLLs
		Remove all warnings
		Rewrite asset system NOT using JSIL's XNA-mimicking asset system. Instead directly use XHTMLRequest (or some JSIL in-between lighter than XNA-assets)
				in conjunction with soundjs/opentype handling
				let users decide to load assets in advance / on demand / progressively
		Remove soundjs.min.js and opentype.js from JSIL.js; 
DONE:			Remove soundjs dependency from JSIL.Browser.Audio.js. 
				Put opentype and soundjs to Engine/Imp/Web/Graphics|Sound
		Use JSIL to translate a csproj at a time (with each .csproj triggering its own x-compilation as a post build event)
		Fix Light position when applying bone animation (without normal map).
		Fix RC Model/View/ModelView behaviour (1. View-only: awkward, 2. Model!=Id & View!=Id: Hierarchy broken.
		

		
		Jometri integration (portable)
		Try JSIL's PackedArray (= js typed array or arraybuffer) implementation on Mesh (and probably also MeshContainer/Component)
		Use arraybuffer loading on XHTMLRequests loading mesh data (if possible - problem is that only parts of .fus should be read as arraybuffers, other parts rather not)
		Minimize mscorlib with current JSIL-on-board functionality (instead of providing our own JSIL)
		Completely remove FUSEE/JSIL (or replace it by a non-altered version of standard JSIL)
		Refactor fuGen (and others) such that it contains no knowledge about the project structure (e.g. does not contain any reference to xirkit, simplescene etc. in its code)
		Move physics stuff out of core
		Look at http://www.codeproject.com/Articles/620154/UniversalSerializer. Can we create a precompiler?
		